unit Controllers.Produto;

interface

uses horse;

procedure Registry;

implementation

uses Services.Produto;

procedure ListarProdutos(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LRetorno := TJSONObject;
  LService: TServiceProduto;
begin
  LService := TServiceProduto.Create();
  try
    Res.Send('');
  finally
    LService.Free;
  end;
  Res.Send('');
end;

procedure ObterProduto(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LService: TServiceProduto;
begin
  LService := TServiceProduto.Create();
  try
    Res.Send('');
  finally
    LService.Free;
  end;
  Res.Send('');
end;

procedure CadastrarProduto(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LService: TServiceProduto;
begin
  LService := TServiceProduto.Create();
  try
    Res.Send('');
  finally
    LService.Free;
  end;
  Res.Send('');
end;

procedure AlterarProduto(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LService: TServiceProduto;
begin
  LService := TServiceProduto.Create();
  try
    Res.Send('');
  finally
    LService.Free;
  end;
  Res.Send('');
end;

procedure DeletarProduto(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LService: TServiceProduto;
begin
  LService := TServiceProduto.Create();
  try
    Res.Send('');
  finally
    LService.Free;
  end;
  Res.Send('');
end;

procedure Registry;
begin
    THorse.Get('/produtos', ListarProdutos);
    THorse.Get('/produtos/:id', ObterProduto);
    THorse.Post('/produtos', CadastrarProduto);
    THorse.Put('/produtos/:id', AlterarProduto);
    THorse.Get('/produtos/:id', DeletarProduto);
end;

end.
